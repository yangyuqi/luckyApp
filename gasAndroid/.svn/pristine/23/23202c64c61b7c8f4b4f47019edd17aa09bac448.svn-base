package com.yunqilai.consumer.luckyapp.Common.Presenter;

import android.content.Intent;
import android.graphics.Color;
import android.os.Handler;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;

import com.jude.rollviewpager.OnItemClickListener;
import com.jude.rollviewpager.adapter.StaticPagerAdapter;
import com.jude.rollviewpager.hintview.ColorPointHintView;
import com.yunqilai.consumer.R;
import com.yunqilai.consumer.luckyapp.Common.Base.BasePresenterActivity;
import com.yunqilai.consumer.luckyapp.Common.Utils.SharedPreferencesUtils;
import com.yunqilai.consumer.luckyapp.Common.View.SplashView;
import com.yunqilai.consumer.luckyapp.MainActivity;

import java.util.ArrayList;
import java.util.List;

/**
 * Created by Administrator on 2017/6/14.
 */

public class SplashActivity extends BasePresenterActivity<SplashView> {

    private int currentPosition = 0;
    //指示器
    private LinearLayout indicatorLayout;
    //indicator ImageView的集合
    private List<ImageView> listIndicatiors;

    private List<View> data = new ArrayList<>();
    private TestNormalAdapter adapter ;

    private boolean isfristUse = true ;
    private long fristTime ;

    @Override
    protected Class<SplashView> getViewClass() {
        return SplashView.class;
    }

    @Override
    protected void onBindView() {
        super.onBindView();

        fristTime = (long) SharedPreferencesUtils.getParam(context,SharedPreferencesUtils.fristTime,System.currentTimeMillis()/(1000*60));
        SharedPreferencesUtils.setParam(context,SharedPreferencesUtils.fristTime,fristTime);

        isfristUse = (boolean) SharedPreferencesUtils.getParam(context,SharedPreferencesUtils.isfristuse,true);
        if (isfristUse) {

            vu.getIv_welcome().setVisibility(View.VISIBLE);
            new Handler().postDelayed(new Runnable() {
                @Override
                public void run() {
                    vu.getIv_welcome().setVisibility(View.GONE);
                    initViewPage();
                }
            },2000);


        }else {
            vu.getIv_welcome().setVisibility(View.VISIBLE);
            new Handler().postDelayed(new Runnable() {
                @Override
                public void run() {
                    startActivity(new Intent(context, MainActivity.class));
                    finish();
                }
            },2500);
        }

    }


    private class TestNormalAdapter extends StaticPagerAdapter {
        private int[] imgs = {
                R.drawable.splash1,
                R.drawable.splash2,
                R.drawable.splash3,
        };


        @Override
        public View getView(ViewGroup container, int position) {
            ImageView view = new ImageView(container.getContext());
            view.setImageResource(imgs[position]);
            view.setScaleType(ImageView.ScaleType.CENTER_CROP);
            view.setLayoutParams(new ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.MATCH_PARENT));
            return view;
        }


        @Override
        public int getCount() {
            return imgs.length;
        }
    }

    /**
     * 设置小点
     */
    private void initIndicator(int size) {
        listIndicatiors = new ArrayList<>();
        indicatorLayout.removeAllViews();
        if(size>1){
            for (int i = 0; i < size; i++) {
                ImageView imageView = new ImageView(this);
                imageView.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.WRAP_CONTENT));
                imageView.setPadding(getResources().getDimensionPixelOffset(R.dimen.splash_point_padding),0,
                        getResources().getDimensionPixelOffset(R.dimen.splash_point_padding),0);
                if(i == (size-1)){
                    imageView.setImageResource(R.drawable.btn_arrow_up);
                }else{
                    imageView.setImageResource(R.drawable.btn_arrow_right);
                }
                if (i == currentPosition) {
                    imageView.setSelected(true);
                } else {
                    imageView.setSelected(false);
                }
                listIndicatiors.add(imageView);
                indicatorLayout.addView(imageView);
            }
        }
    }

    public void setIndicatorSelect() {
        for (int i = 0; i < listIndicatiors.size(); i++) {
            if (currentPosition == i) {
                listIndicatiors.get(i).setSelected(true);
            } else {
                listIndicatiors.get(i).setSelected(false);
            }
        }
    }

    public void initViewPage(){
        adapter = new TestNormalAdapter();
        vu.getVp().setAdapter(adapter);
        //设置播放时间间隔
        vu.getVp().setPlayDelay(100000);
        //设置透明度
        vu.getVp().setAnimationDurtion(500);
        vu.getVp().setHintView(new ColorPointHintView(context,Color.TRANSPARENT,Color.TRANSPARENT));

        indicatorLayout = (LinearLayout)findViewById(R.id.layout_indicator);

        vu.getVp().getViewPager().addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

                currentPosition = position;
                setIndicatorSelect();

                if (position == 2) {
                    vu.getIv().setVisibility(View.VISIBLE);
                    vu.getIv().setOnClickListener(new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            SharedPreferencesUtils.setParam(context,SharedPreferencesUtils.isfristuse,false);
                            startActivity(new Intent(context, MainActivity.class));
                            finish();

                        }
                    });
                } else {
                    vu.getIv().setVisibility(View.GONE);
                }
            }

            @Override
            public void onPageSelected(int position) {

            }

            @Override
            public void onPageScrollStateChanged(int state) {

            }
        });

        initIndicator(3);
    }

}
